{"version":3,"sources":["./src/app/members/dashboard/dashboard.page.html","./src/app/members/dashboard/dashboard-routing.module.ts","./src/app/members/dashboard/dashboard.module.ts","./src/app/members/dashboard/dashboard.page.scss","./src/app/members/dashboard/dashboard.page.ts"],"names":[],"mappings":"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","file":"dashboard-dashboard-module-es2015.js","sourcesContent":["export default \"<ion-header color=\\\"primary\\\">\\n  <ion-toolbar class=\\\"toolbar-background-md\\\">\\n    <ion-title>\\n      <ion-chip outline class=\\\"ion-margin-vertical chip\\\">\\n        <ion-icon class=\\\"chip ion-no-margin\\\" name=\\\"map\\\"></ion-icon>\\n        <ion-select style=\\\"margin-top: 10px;\\\" [interfaceOptions]=\\\"customPopoverOptions\\\" interface=\\\"popover\\\" mode=\\\"ios\\\" placeholder=\\\"Route\\\" [(ngModel)]=\\\"currRootId\\\" (ionChange)=\\\"setRouteCusts()\\\">\\n            <ion-select-option *ngFor=\\\"let route of routes\\\" value=\\\"{{route.route_id}}\\\">\\n                {{route.route_name}}\\n            </ion-select-option>\\n        </ion-select>\\n        <ion-spinner style=\\\"margin-left: 16px;\\\" name=\\\"crescent\\\" size=\\\"small\\\" color=\\\"light\\\" [hidden]=\\\"!submitting\\\"></ion-spinner>\\n      </ion-chip>\\n\\n      <ion-chip color=\\\"light\\\" class=\\\"chip-notice\\\"  (click)=\\\"checkAndUpdateRep()\\\">   \\n        <ion-icon name=\\\"bicycle\\\" [color]=\\\"istmpCurrTripIdSet() ? 'success':'danger'\\\" ></ion-icon>      \\n            <ion-icon name=\\\"warning\\\" [hidden]=\\\"istmpCurrTripIdSet()\\\"></ion-icon>\\n            <h5 style=\\\"margin-top: 12px;\\\" mode=\\\"ios\\\" [hidden]=\\\"!istmpCurrTripIdSet()\\\"> {{tmpCurrTripId}} </h5>\\n      </ion-chip>\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>      \\n  <ion-list #custList class=\\\"sheet-list\\\">\\n      <ion-card-header>\\n          <ion-grid>\\n                <ion-row>\\n                    <ion-col size=\\\"8\\\" style=\\\"padding-top: 20px\\\">\\n                        <ion-card-subtitle *ngIf=\\\"isRootCustAvail\\\">{{ currRootCusts.length }} customer(s) avilable</ion-card-subtitle>\\n                        <ion-card-subtitle *ngIf=\\\"!isRootCustAvail && isRootSelected\\\">No customers registerd for this route </ion-card-subtitle>\\n                        <ion-card-subtitle *ngIf=\\\"!isRootSelected\\\">Please select the route.. </ion-card-subtitle>\\n                    </ion-col>\\n                    <!--<ion-col size=\\\"4\\\">\\n                        <ion-button class=\\\"ion-text-capitalize\\\" *ngIf=\\\"isRootSelected\\\" (click)=\\\"openAddCust()\\\">\\n                            <ion-icon name=\\\"add\\\"></ion-icon>Customer\\n                        </ion-button>\\n                    </ion-col>-->\\n                </ion-row>\\n          </ion-grid>\\n        \\n        \\n      </ion-card-header>\\n      \\n      <ion-item-sliding *ngFor=\\\"let cust of currRootCusts\\\" class=\\\"list-small-amrgin\\\">\\n          <ion-item background=\\\"dark\\\" (click)=\\\"addOrder(cust)\\\">\\t\\t\\t\\n              <ion-label text-wrap class=\\\"ion-no-margin\\\">\\n                  <ion-text color=\\\"dark\\\" slot=\\\"start\\\">\\n                    <ion-badge mode=\\\"ios\\\" class=\\\"list-header\\\" color=\\\"primary\\\">\\n                      <ion-icon name=\\\"business\\\" size=\\\"small\\\"></ion-icon> {{ cust.cust_name }} | {{ cust.is_vat }}\\n                    </ion-badge>\\n                  </ion-text>\\n                  \\n                  <ion-text color=\\\"light\\\">\\n                      <p class=\\\"list-sub-header\\\">\\n                          <ion-icon name=\\\"pin\\\"></ion-icon>\\n                          {{ cust.address_line1 }} {{ cust.address_line2 }} {{cust.address_line3}}\\n                      </p>\\n                  </ion-text>\\n              </ion-label>\\n          </ion-item>\\n          \\n          <ion-item-options side=\\\"end\\\">\\n              <ion-item-option color=\\\"primary\\\" class=\\\"ion-text-capitalize\\\" (click)=\\\"openCustInfo(cust)\\\"  [class.disable-btn]=\\\"submitting\\\" >\\n                  <ion-icon name=\\\"more\\\"></ion-icon>More\\n              </ion-item-option>\\n              <ion-item-option color=\\\"dark\\\" class=\\\"ion-text-capitalize\\\" (click)=\\\"addOrder(cust)\\\"  [class.disable-btn]=\\\"submitting || !istmpCurrTripIdSet()\\\">\\n                      <ion-icon name=\\\"add-circle-outline\\\"></ion-icon>Order\\n              </ion-item-option>\\n              <ion-item-option color=\\\"secondary\\\" class=\\\"ion-text-capitalize\\\" (click)=\\\"openHistory(cust.cust_id)\\\" >\\n                <ion-icon name=\\\"checkmark-circle-outline\\\"></ion-icon>History\\n        </ion-item-option>\\n          </ion-item-options>\\n      </ion-item-sliding>\\n    </ion-list>\\n</ion-content>\\n\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardPage } from './dashboard.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DashboardPageRoutingModule } from './dashboard-routing.module';\n\nimport { DashboardPage } from './dashboard.page';\nimport { CustInfoPageModule } from '../inc/cust-info/cust-info.module';\nimport { AddOrderPageModule } from '../inc/add-order/add-order.module';\nimport { CustAddPageModule } from '../inc/cust-add/cust-add.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DashboardPageRoutingModule,\n    CustInfoPageModule,\n    AddOrderPageModule,\n    CustAddPageModule\n  ],\n  declarations: [DashboardPage]\n})\nexport class DashboardPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbWJlcnMvZGFzaGJvYXJkL2Rhc2hib2FyZC5wYWdlLnNjc3MifQ== */\"","import { AuthenticationService } from './../../services/authentication.service';\nimport { StorageService, Rep } from './../../services/storage.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MenuController } from '@ionic/angular';\nimport { FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastController, IonList, Platform} from '@ionic/angular';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ModalController } from '@ionic/angular';\n\nimport { CustInfoPage } from '../inc/cust-info/cust-info.page';\nimport { AddOrderPage } from '../inc/add-order/add-order.page';\nimport { OrderHistoryPage } from '../inc/order-history/order-history.page';\nimport { CustAddPage } from '../inc/cust-add/cust-add.page';\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.page.html',\n    styleUrls: ['./dashboard.page.scss'],\n})\nexport class DashboardPage implements OnInit {\n  \n    private routes: any[];\n    private currRootId: any;\n    private currRootCusts: any[];\n    private isRootCustAvail: boolean = false;\n    private submitting: boolean;\n    private repId: number;\n    private tmpCurrTripId: number = -1;\n    private currCustomer: number;\n    private isRootSelected: boolean = false;\n    private rep: Rep;\n    customPopoverOptions: any = {\n        subHeader: 'Route',\n        message: 'Select current route'\n    };\n\n    @ViewChild('custList', {static: false}) custList: IonList;\n    constructor(\n        private authService: AuthenticationService,\n        public router: Router, \n        public formBuilder: FormBuilder, \n        public toast: ToastController,\n        private http: HttpClient,\n        private storage: StorageService,\n        public modalController: ModalController,\n        private plt: Platform\n        ) { \n        \n    }\n \n    ngOnInit() {\n        this.plt.ready().then(() => {\n            document.addEventListener(\"backbutton\",function(e) {}, false);\n            this.checkAndUpdateRep();\n        })\n    }\n\n\n    async openAddCust(){\n        const modal = await this.modalController.create({\n            component: CustAddPage,\n            componentProps: {\n                currRootId: this.currRootId,\n            }\n        });\n        modal.present(); \n        let ret = await modal.onWillDismiss();\n        let isAdd = ret.data.isAdded;\n        if (isAdd) {\n            console.log(isAdd);\n            this.setRouteCusts();\n        }\n    }\n\n\n    checkAndUpdateRep() {\n\n        this.authService.getRep().then(rep=>{\n            this.rep = rep;\n            this.routes = rep.repRoutes;\n            this.repId = rep.repID;\n            // this.checkAndSyncCurrTrip(rep);\n            this.getSVROpenedTripId();  //set current opened trip id from server\n\n            console.log(rep)\n            if (!rep.currOpenedTripId) {\n                rep.currOpenedTripId = this.tmpCurrTripId;\n            } else {\n                if (rep.currOpenedTripId != this.tmpCurrTripId && this.tmpCurrTripId != -1) {\n                    rep.currOpenedTripId = this.tmpCurrTripId;\n                    this.authService.setRep(rep); //update local rep on local storage\n                }\n            }\n            // console.log(rep)\n        })\n    }\n\n\n    async addOrder(customer: any){\n        // console.log(customer)\n        if(this.istmpCurrTripIdSet()){\n            const modal = await this.modalController.create({\n                component: AddOrderPage,\n                componentProps: {\n                    customer: customer,\n                    tripId: this.tmpCurrTripId,\n                    // repId: this.repId,\n                    rep: this.rep\n                }\n            });\n            return await modal.present();\n        } else{\n            this.showToast(\"Please set the current opened trip first..<ion-icon name='warning'>\\\n            </ion-icon></b><br><b>Hint: </b> Refresh the trip (tap the Bicycle Icon) and try again..\");\n        }\n    }\n\n    async openHistory(cust_id: number){\n        const modal = await this.modalController.create({\n            component: OrderHistoryPage,\n            componentProps: {\n                custId: cust_id,\n            }\n        });\n        return await modal.present();\n    }\n\n    isRouteSet(){\n        return (this.routes == null) \n    }\n    \n    logout() {\n        this.authService.logout();\n    }\n\n    setRouteCusts(){\n        console.log(this.currRootId);\n        this.getCurrRoutCustomerInfo();\n\n    }\n\n    async openCustInfo(cust: any) {\n        const modal = await this.modalController.create({\n            component: CustInfoPage,\n            componentProps: {\n                custData: cust\n            }\n        });\n        return await modal.present();\n    }\n\n    istmpCurrTripIdSet(): boolean{\n        return (this.tmpCurrTripId != -1 ? true: false)\n    }\n\n    getSVROpenedTripId(){\n        if (!navigator.onLine) {\n            this.showToast(\"<b>No internet access..<ion-icon name='information-circle-outline'></ion-icon></b><br>Cannot connect to the server..\");\n        } else{\n            this.submitting = true;\n            let url = this.storage.svr_url+\"RepCtrl/getCurrentTripId/\"+this.repId;\n\n            this.http.get(url).subscribe((data: any) => {\n            if (data.length === 1){\n                this.tmpCurrTripId = data[0].trip_id;\n            } else{\n                this.tmpCurrTripId = -1;\n                this.showToast(\"You have no or more than one started trips..<ion-icon name='warning'></ion-icon></b><br>Please contact the administration..\"); \n            }\n            this.submitting = false;\n            },\n            (error: any) => {\n                console.log(error);\n            });\n        }\n    }\n\n    getCurrRoutCustomerInfo(){\n        if (!navigator.onLine) {\n            this.showToast(\"<b>No internet access..<ion-icon name='information-circle-outline'></ion-icon></b><br>Cannot connect to the server..\");\n        } else {\n            this.submitting = true;\n            const ParseHeaders = {\n                headers: new HttpHeaders({\n                'Content-Type': 'application/x-www-form-urlencoded'\n                })\n            };\n            \n            let url = this.authService.svr_url+\"RepCtrl/getCustomerByRouteID/\"+this.currRootId;\n\n            this.http.post(url, null, ParseHeaders).subscribe((data: any) => {\n                this.submitting = false;\n                console.log(data);\n                this.isRootSelected = true;\n                if (data != 0){\n                    this.currRootCusts = data;\n                    this.isRootCustAvail = true;\n                } else {\n                    this.isRootCustAvail = false;\n                    this.currRootCusts = null;\n                }\n                // this.currRootCusts = data;\n                // this.loadCurrRootCusts();\n            },\n            (error: any) => {\n                console.log(error);\n            });\n\n        }   \n    }\n\n    // loadCurrRootCusts() {\n    //     if (this.currRootCusts.length > 0) {\n    //         this.isRootCustAvail = true;\n    //     }\n    // }\n\n    async showToast(msg) {\n        const toast = await this.toast.create({\n            mode: 'ios',\n            message: msg,\n            duration: 4000\n        });\n        toast.present();\n    }\n}"],"sourceRoot":"webpack:///"}