{"version":3,"sources":["src/app/members/inc/add-order/add-order.page.html","src/app/members/inc/add-order/add-order-routing.module.ts","src/app/members/inc/add-order/add-order.module.ts","src/app/members/inc/add-order/add-order.page.scss","src/app/members/inc/add-order/add-order.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header color=\\\"primary\\\">\\n    <ion-toolbar class=\\\"toolbar-background-md\\\">\\n      <ion-title>\\n        <ion-chip outline class=\\\"ion-margin-vertical chip\\\">\\n          <ion-icon class=\\\"chip\\\" name=\\\"clipboard\\\"></ion-icon>ORDER\\n          <ion-spinner style=\\\"margin-left: 16px;\\\" name=\\\"crescent\\\" color=\\\"light\\\" [hidden]=\\\"!submitting\\\"></ion-spinner>\\n        </ion-chip>\\n        <ion-chip color=\\\"light\\\" class=\\\"chip-notice\\\">   \\n            <ion-icon name=\\\"bicycle\\\" color=\\\"success\\\" ></ion-icon>      \\n                <h5 mode=\\\"ios\\\"> {{curTrip.tripId}} </h5>\\n          </ion-chip>\\n      </ion-title>\\n      <ion-buttons slot=\\\"end\\\">\\n        <ion-button class=\\\"ion-text-capitalize\\\" (click)=\\\"dismiss()\\\">Close</ion-button>\\n      </ion-buttons>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n<ion-content style=\\\"padding-bottom: 40px;\\\">\\n        <ion-card-header>\\n            <ion-button (click)=\\\"addReturn()\\\"><ion-icon name=\\\"add\\\"></ion-icon>Return</ion-button>\\n            <ion-button color=\\\"primary\\\" (click)=\\\"openHistory()\\\"><ion-icon name=\\\"checkmark-circle-outline\\\"></ion-icon>Order History</ion-button>\\n            <ion-card-title>Add Order </ion-card-title>\\n            <ion-card-subtitle>{{customer.cust_name}} | {{customer.is_vat}}</ion-card-subtitle>\\n            <ion-card-subtitle>{{customer.address_line1}}, {{customer.address_line2}}, {{customer.address_line3}}</ion-card-subtitle>\\n        </ion-card-header>\\n        <ion-list >   \\n            <ion-item-divider class=\\\"ion-margin-remove\\\"></ion-item-divider>         \\n            <ion-item-sliding *ngFor=\\\"let odrItem of currOrder.order_items; let idx = index\\\">\\n\\n                <ion-item>\\t\\n                    <div class=\\\"item-card\\\">\\n                        <ion-select slot=\\\"start\\\"  mode=\\\"ios\\\" placeholder=\\\"Select Item\\\" \\n                        [(ngModel)]=\\\"odrItem.item_id\\\" (ionChange)=\\\"calcPrice(odrItem.item_id)\\\" (ionChange)=\\\"toggleUpdateItemList(odrItem.item_id)\\\" style=\\\"max-width: 100%;\\\">\\n                            \\n                            <ion-select-option *ngFor=\\\"let tripItem of curTrip.tripItems\\\" value=\\\"{{tripItem.itemId}}\\\"\\n                            [disabled]=\\\"tripItem.isSelected || tripItem.balanceQty == 0\\\">\\n                                {{tripItem.itemName}} | {{tripItem.balanceQty}}{{tripItem.itemUnitName}}\\n                            </ion-select-option>\\n\\n                        </ion-select>\\n                        <ion-item>\\n                            <ion-input type=\\\"number\\\" disabled [(ngModel)]=\\\"odrItem.price_sold\\\" placeholder=\\\"Selling Price\\\"></ion-input>\\n                            <ion-input type=\\\"number\\\" (keyup)=\\\"chkItemBalence($event, odrItem.item_id)\\\" \\n                            (blur)=\\\"finalizeItem($event)\\\" (blur)=setInvoicePaidAuto($event) placeholder=\\\"Qty\\\" [(ngModel)]=\\\"odrItem.qty\\\"></ion-input>\\n                            <div text-right>{{odrItem.qty*odrItem.price_sold | number : '1.2-2'}}</div>\\n                        </ion-item>\\n                    </div>\\n                </ion-item>\\n                <ion-item-options side=\\\"end\\\">\\n                    <ion-item-option color=\\\"danger\\\" class=\\\"ion-text-capitalize\\\" (click)=\\\"removeItem(odrItem)\\\"  [class.disable-btn]=\\\"submitting\\\">\\n                            <ion-icon name=\\\"close\\\"></ion-icon>Remove\\n                    </ion-item-option>\\n                </ion-item-options>\\n            </ion-item-sliding>\\n        </ion-list>\\n        <ion-item style=\\\"color: #3171e0;\\\" (click)=\\\"addItem()\\\">\\n            <ion-icon name=\\\"add\\\" color=\\\"primary\\\"></ion-icon>Add new\\n        </ion-item>\\n        <ion-item >\\n            <b>Total Payed Amount </b>\\n            <ion-input placeholder=\\\"0\\\" type=\\\"number\\\" [(ngModel)]=\\\"currOrder.odr_paid_amount\\\" (keyup)=\\\"setEffectiveBalance($event)\\\"  class=\\\"ion-text-right\\\" placeholder=\\\"Enter Here..\\\"></ion-input>\\n        </ion-item>\\n        <ion-item >\\n            <ion-textarea auto-grow=\\\"true\\\" placeholder=\\\"Remarks..\\\" [(ngModel)]=\\\"currOrder.odr_remark\\\"></ion-textarea>\\n        </ion-item>\\n            \\n        <ion-card>\\n            <ion-card-header>\\n                <ion-grid>\\n                    <ion-row>\\n                        <ion-col size=\\\"10\\\">\\n                            <ion-card-title>Outstanding/Excess Settlements</ion-card-title>\\n                        </ion-col>\\n                        <ion-col size=\\\"2\\\">\\n                            <ion-button color=\\\"primary\\\" (click)=\\\"outstSettle()\\\"><ion-icon name=\\\"add\\\"></ion-icon></ion-button>\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row>\\n                        <ion-col>\\n                            <ion-card-subtitle> Effective Paid Amount: </ion-card-subtitle>\\n                        </ion-col>\\n                        <ion-col>\\n                            Rs.{{effectivePaid | number : '1.2-2'}}\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row>\\n                        <ion-col>\\n                            <ion-card-subtitle> Tot. Out/Exc Deduct: </ion-card-subtitle>\\n                        </ion-col>\\n                        <ion-col>\\n                            Rs.{{outstDeduct | number : '1.2-2'}}\\n                        </ion-col>\\n                    </ion-row>\\n                </ion-grid>\\n            </ion-card-header>\\n            <ion-list style=\\\"margin-bottom: 40px;\\\">\\n                <ion-item-sliding *ngFor=\\\"let pay of outstSettles; let idx = index\\\">\\n                    <ion-item class=\\\"list-small-amrgin\\\">\\t\\t\\t\\n                        <ion-label text-wrap class=\\\"ion-no-margin\\\">\\n                            <ion-grid>\\n                                <ion-row>\\n                                    <ion-col size=\\\"2\\\" class=\\\"ion-float-left\\\">\\n                                        <ion-text color=\\\"light\\\">\\n                                            <ion-badge mode=\\\"ios\\\" class=\\\"list-header\\\" color=\\\"primary\\\">\\n                                                <ion-icon class=\\\"chip\\\" name=\\\"clipboard\\\"></ion-icon> {{ pay.odrId }}\\n                                            </ion-badge>\\n                                        </ion-text>\\n                                    </ion-col>\\n                                    <ion-col size=\\\"6\\\" class=\\\"ion-float-left\\\">\\n                                        <ion-text color=\\\"light\\\">\\n                                            <p class=\\\"list-sub-header ion-text-right\\\">\\n                                                Rs.{{ pay.amount }}\\n                                            </p>\\n                                        </ion-text>\\n                                    </ion-col>\\n                                    <ion-col size=\\\"2\\\" class=\\\"ion-float-right\\\">\\n                                        <ion-badge class=\\\"ion-float-right\\\" mode=\\\"ios\\\" *ngIf=\\\"pay.isOutstPay\\\" color=\\\"danger\\\">\\n                                            <ion-icon name=\\\"add\\\"></ion-icon>\\n                                        </ion-badge>\\n                                        <ion-badge class=\\\"ion-float-right\\\" mode=\\\"ios\\\" *ngIf=\\\"!pay.isOutstPay\\\" color=\\\"tertiary\\\">\\n                                            <ion-icon name=\\\"remove\\\"></ion-icon>\\n                                        </ion-badge>\\n                                    </ion-col>\\n                                </ion-row>\\n                            </ion-grid>\\n                        </ion-label>\\n                    </ion-item>\\n                    <ion-item-options side=\\\"end\\\">\\n                        <ion-item-option color=\\\"danger\\\" class=\\\"ion-text-capitalize\\\" (click)=\\\"removeSettlePay(idx, pay.amount)\\\">\\n                                <ion-icon name=\\\"close\\\"></ion-icon>Remove\\n                        </ion-item-option>\\n                    </ion-item-options>\\n                </ion-item-sliding>\\n            </ion-list>\\n        </ion-card>\\n\\n        <ion-card style=\\\"margin-bottom: 40px;\\\">\\n            <ion-card-header>\\n                <ion-button class=\\\"ion-margin\\\" (click)=\\\"processOrder()\\\" mode=\\\"ios\\\" slots=\\\"start\\\" expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"!isOrdeValid\\\">Refresh Invoice</ion-button>\\n                <ion-grid>\\n                    <ion-row>\\n                        <ion-col size=\\\"12\\\">\\n                            <ion-card-title>Invoice Preview</ion-card-title>\\n                            <ion-card-subtitle>{{customer.cust_name}}</ion-card-subtitle>\\n                            <p>{{customer.address_line1}}, {{customer.address_line2}}, {{customer.address_line3}}</p>\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row>\\n                        <ion-col class=\\\"ion-float-left\\\">\\n                            <div>Invoice Date</div>\\n                        </ion-col>\\n                        <ion-col class=\\\"ion-float-right\\\">\\n                            <div> {{currOrder.odr_datetime}} </div>\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row>\\n                        <ion-col class=\\\"ion-float-left\\\">\\n                            <div>Sales Rep</div>\\n                        </ion-col>\\n                        <ion-col class=\\\"ion-float-right\\\">\\n                            <div> {{rep.repFname}} {{rep.repLname}}</div>\\n                        </ion-col>\\n                    </ion-row>\\n                </ion-grid>\\n            </ion-card-header>\\n            <ion-card-content>\\n                <ion-item>\\n                    <ion-grid>\\n                        <ion-row>\\n                            <ion-col class=\\\"ion-float-left\\\">\\n                                <div><h5><b>Item | Price</b></h5></div>\\n                            </ion-col>\\n                            <ion-col class=\\\"ion-float-left\\\">\\n                                <div><h5><b>Qty</b></h5></div>\\n                            </ion-col>\\n                            <ion-col class=\\\"ion-float-right\\\">\\n                                <div class=\\\"ion-text-right\\\"> <h5><b>Amount</b></h5> </div>\\n                            </ion-col>\\n                        </ion-row>\\n                    </ion-grid>\\n                </ion-item>\\n                <ion-item *ngFor=\\\"let item of currOrder.order_items\\\">\\n                    <ion-grid *ngIf=\\\"item.qty\\\">\\n                        <div style=\\\"margin-left: 5px;\\\"><h3><b>{{item.item_name}}</b></h3></div>\\n                        <ion-row>\\n                            <ion-col class=\\\"ion-float-left\\\">\\n                                <div>Rs.{{item.price_sold | number : '1.2-2'}}</div>\\n                            </ion-col>\\n                            <ion-col class=\\\"ion-float-left\\\">\\n                                <div>X {{item.qty}}</div>\\n                            </ion-col>\\n                            <ion-col class=\\\"ion-float-right\\\">\\n                                <div class=\\\"ion-text-right\\\">\\n                                    Rs.{{item.price_sold*item.qty | number : '1.2-2'}}\\n                                </div>\\n                            </ion-col>\\n                        </ion-row>\\n                    </ion-grid>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-grid>\\n                        <ion-row>\\n                            <ion-col class=\\\"ion-float-left\\\">\\n                                <div><h5><b>Total Amount</b></h5></div>\\n                            </ion-col>\\n                            <ion-col class=\\\"ion-float-right\\\">\\n                                <div class=\\\"ion-text-right\\\">\\n                                    <h5><b>Rs.{{currOrder.odr_amount-currOrder.vat_amount | number : '1.2-2'}}</b></h5>\\n                                </div>\\n                            </ion-col>\\n                        </ion-row>\\n                        <ion-row>\\n                            <ion-col class=\\\"ion-float-left\\\">\\n                                <div><h5><b>VAT</b></h5></div>\\n                            </ion-col>\\n                            <ion-col class=\\\"ion-float-right\\\">\\n                                <div class=\\\"ion-text-right\\\">\\n                                    <h5><b>Rs.{{currOrder.vat_amount | number : '1.2-2'}}</b></h5>\\n                                </div>\\n                            </ion-col>\\n                        </ion-row>\\n                        <ion-row>\\n                            <ion-col class=\\\"ion-float-left\\\">\\n                                <div><h5><b>Tot. Bill Amount</b></h5></div>\\n                            </ion-col>\\n                            <ion-col class=\\\"ion-float-right\\\">\\n                                <div class=\\\"ion-text-right\\\">\\n                                    <h5><b>Rs.{{currOrder.odr_amount | number : '1.2-2'}}</b></h5>\\n                                </div>\\n                            </ion-col>\\n                        </ion-row>\\n                        <ion-row>\\n                            <ion-col class=\\\"ion-float-left\\\">\\n                                <div><h5><b>Paid Amount</b></h5></div>\\n                            </ion-col>\\n                            <ion-col class=\\\"ion-float-right\\\">\\n                                <div class=\\\"ion-text-right\\\">\\n                                    <h5><b>Rs.{{currOrder.odr_paid_amount | number : '1.2-2'}}</b></h5>\\n                                </div>\\n                            </ion-col>\\n                        </ion-row>\\n                        <ion-row style=\\\"background-color: rgb(107, 107, 107); color: #fff;\\\">\\n                            <ion-col class=\\\"ion-float-left\\\">\\n                                <div><h5><b>Tot. Out/Exc Deduction</b></h5></div>\\n                            </ion-col>\\n                            <ion-col class=\\\"ion-float-right\\\">\\n                                <div class=\\\"ion-text-right\\\">\\n                                    <h5><b>Rs.{{outstDeduct | number : '1.2-2'}}</b></h5>\\n                                </div>\\n                            </ion-col>\\n                        </ion-row>\\n                        <ion-row style=\\\"background-color: rgb(42, 42, 42); color: #fff;\\\">\\n                            <ion-col class=\\\"ion-float-left\\\">\\n                                <div><h5><b>Effective Paid Amount</b></h5></div>\\n                            </ion-col>\\n                            <ion-col class=\\\"ion-float-right\\\">\\n                                <div class=\\\"ion-text-right\\\">\\n                                    <h5><b>Rs.{{effectivePaid | number : '1.2-2'}}</b></h5>\\n                                </div>\\n                            </ion-col>\\n                        </ion-row>\\n                        <ion-row style=\\\"background-color: rgb(5, 5, 5); color: #fff;\\\">\\n                            <ion-col class=\\\"ion-float-left\\\">\\n                                <div><h5><b>Invoice Outst.</b></h5></div>\\n                            </ion-col>\\n                            <ion-col class=\\\"ion-float-right\\\">\\n                                <div class=\\\"ion-text-right\\\">\\n                                    <h5><b>Rs.{{tempOutstanding | number : '1.2-2'}}</b></h5>\\n                                </div>\\n                            </ion-col>\\n                        </ion-row>\\n                        \\n                    </ion-grid>\\n                </ion-item>\\n            </ion-card-content>\\n        </ion-card>\\n\\n        <ion-button class=\\\"ion-margin\\\" [hidden]=\\\"!currOrder.isWorking\\\" (click)=\\\"submitOrder()\\\" mode=\\\"ios\\\" slots=\\\"start\\\" \\n        expand=\\\"block\\\" [disabled]=\\\"!isOrdeValid\\\">Print Customer Copy</ion-button>\\n        <ion-button class=\\\"ion-margin\\\" [hidden]=\\\"currOrder.isWorking\\\" (click)=\\\"printInvoice(false)\\\" mode=\\\"ios\\\" slots=\\\"start\\\" \\n        expand=\\\"block\\\" [disabled]=\\\"!isOrdeValid\\\">Print Rep Copy</ion-button>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddOrderPage } from './add-order.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddOrderPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddOrderPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddOrderPageRoutingModule } from './add-order-routing.module';\n\nimport { AddOrderPage } from './add-order.page';\nimport { ReturnPageModule } from '../return/return.module'\nimport { OrderHistoryPageModule } from '../order-history/order-history.module'\nimport { OutstSettlePageModule } from '../outst-settle/outst-settle.module'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AddOrderPageRoutingModule,\n    ReturnPageModule,\n    OrderHistoryPageModule,\n    OutstSettlePageModule\n  ],\n  declarations: [AddOrderPage]\n})\nexport class AddOrderPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbWJlcnMvaW5jL2FkZC1vcmRlci9hZGQtb3JkZXIucGFnZS5zY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { OrderItem, Order, Rep } from '../../../services/storage.service';\nimport { NavParams } from '@ionic/angular';\nimport { ModalController, IonSelect, Platform, AlertController  } from '@ionic/angular';\nimport { StorageService, Trip, TripItem, OutstPayment } from '../../../services/storage.service';\nimport { AuthenticationService } from '../../../services/authentication.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { DatePipe, CurrencyPipe } from '@angular/common'\nimport { ReturnPage } from '../return/return.page';\nimport { OrderHistoryPage } from '../order-history/order-history.page';\nimport { OutstSettlePage } from '../outst-settle/outst-settle.page';\n\ndeclare var window: any;\n\n@Component({\n    selector: 'app-add-order',\n    templateUrl: './add-order.page.html',\n    styleUrls: ['./add-order.page.scss'],\n})\n\n\nexport class AddOrderPage implements OnInit {\n\n    private currOrder: Order = <Order>{};\n    private customer: any;\n    private currTripId: number;\n    private curTrip: Trip = <Trip>{};\n    private submitting: boolean;\n    private selectList: TripItem[] = [];\n    private isOrdeValid: boolean = true;\n    private tempOutstanding: number = 0;\n    private rep: Rep;\n    private invoiceNo: any;\n    private outsts: any[] = [];\n    private outstSettles: OutstPayment[] = [];\n    private effectivePaid: number = 0;\n    private outstDeduct: number = 0;\n    \n    @ViewChild('selectItem', {static: false}) selectItem: IonSelect;\n    \n    \n    constructor(\n        private currencyPipe : CurrencyPipe,\n        public modalController: ModalController,\n        private authService: AuthenticationService,\n        private http: HttpClient,\n        private storage: StorageService,\n        private plt: Platform,\n        public alertController: AlertController,\n        public datepipe: DatePipe,\n        private navParams: NavParams\n    ) { \n        this.customer = this.navParams.get('customer');\n        ////// this.currTripId = this.navParams.get('tripId');\n        // this.repId = this.navParams.get('repId');\n        this.rep = this.navParams.get('rep');\n        \n        // this.rep = {\n        //     \"repID\": 2,\n        //     \"repEmail\": \"anton@mail.com\",\n        //     \"repFname\": \"Anton\",\n        //     \"repLname\": \"Ranaweera\",\n        //     \"repTp\": \"0777895689\",\n        //     \"repRoutes\": [\n        //       {\n        //         \"route_id\": \"1\",\n        //         \"route_name\": \"Negombo\",\n        //         \"desc\": null\n        //       },\n        //       {\n        //         \"route_id\": \"2\",\n        //         \"route_name\": \"Arachchikattuwa\",\n        //         \"desc\": null\n        //       },\n        //       {\n        //         \"route_id\": \"5\",\n        //         \"route_name\": \"Colombo\",\n        //         \"desc\": null\n        //       }\n        //     ],\n        //     \"currOpenedTripId\": -1\n        // }\n        // this.customer = {\n        //     \"cust_id\": \"4\",\n        //     \"cust_name\": \"Cust y\",\n        //     \"address_line1\": \"Cust y - Adrs 1\",\n        //     \"address_line2\": \"Cust y - Adrs 2\",\n        //     \"address_line3\": \"Cust y - Adrs 3\",\n        //     \"cust_email\": \"Cust y - email\",\n        //     \"cust_tp\": \"Cust y - tp\",\n        //     \"route_id\": \"2\",\n        //     \"cat_id\": \"2\",\n        //     \"cat_name\": \"Non-Agent\"\n        // };\n        // this.currTripId = 6;\n\n\n\n        this.currOrder.order_items = [];\n        this.currOrder.odr_is_doubt = false;\n    }\n\n    ngOnInit() {\n        this.plt.ready().then(()=>{\n            document.addEventListener(\"backbutton\",function(e) {}, false);\n            this.authService.getRep().then(rep=>{\n                this.rep = rep;\n            })\n            this.fetchServerCurrTrip(); //loading current trip details\n            this.addItem();\n            this.getCustOutstanding();\n            \n        })\n\n        console.log(this.rep)\n    }\n\n\n    async addReturn(){\n        const modal = await this.modalController.create({\n            component: ReturnPage,\n            componentProps: {\n                customer: this.customer,\n                tripId: this.curTrip.tripId,\n                rep: this.rep\n            }\n        });\n        return await modal.present();\n    }\n\n\n    async outstSettle(){\n        const modal = await this.modalController.create({\n            component: OutstSettlePage,\n            componentProps: {\n                outsts: this.outsts,\n                totalPaid: this.currOrder.odr_paid_amount,\n                ttlOutst: this.customer.outstanding\n            }\n        });\n        modal.present(); \n        let ret = await modal.onWillDismiss();\n        let settles = ret.data.settlements;\n        if (settles) {\n            console.log(settles);\n            this.outstSettles = settles;\n            this.calcOutstDeduct();\n            // this.calcEffectivePaid();\n            this.updateTotOutst();\n        }\n    }\n\n    calcOutstDeduct(){\n        this.outstDeduct = 0;\n        this.outstSettles.forEach(settle=>{\n            this.outstDeduct = this.outstDeduct*1 + settle.amount*1;\n        })\n    }\n\n    removeSettlePay(idx: number, amount: number){\n        this.outstSettles.splice(idx, 1);\n        this.calcOutstDeduct();\n        // this.calcEffectivePaid();\n        this.updateTotOutst();\n    }\n    \n\n    calcEffectivePaid(){\n        this.effectivePaid = Number(this.currOrder.odr_paid_amount)*1 - this.outstDeduct*1;\n    }\n\n    setEffectiveBalance(evt){\n        \n      \n        \n        this.effectivePaid = evt.target.value*1 - this.outstDeduct*1;\n\n        /*this.currOrder.odr_paid_amount = this.currencyPipe.transform(this.currOrder.odr_paid_amount);\n        //evt.target.value = this.currOrder.odr_paid_amount;\n        console.log(this.currOrder.odr_paid_amount);*/\n    }\n\n    async openHistory(){\n        const modal = await this.modalController.create({\n            component: OrderHistoryPage,\n            componentProps: {\n                custId: this.customer.cust_id,\n            }\n        });\n        return await modal.present();\n    }\n\n    printInvoice(isCustCpy: boolean){\n        let str: string = \"\";\n        let strSep=\"++++++++++++++++++++++++++++++++\\n\";\n\n        str+=\"___Sales Invoice: #\"+this.invoiceNo+\"___\\n\";\n        str+=this.customer.cust_name+\"\\n\";\n        str+=this.customer.address_line1+\"\\n\";\n        str+=this.customer.address_line2+\"\\n\";\n        str+=this.customer.address_line3+\"\\n\";\n        str+=\"--------------------------------\\n\";\n        str+=\"Date: \"+this.currOrder.odr_datetime+\"\\n\";\n        str+=\"Rep : \"+this.rep.repFname+\" \"+this.rep.repLname+\"\\n\\n\";\n        str+=\"                     \\n\";\n        str+=\"========== Sales Items =========\\n\";\n        str+=\"Item |       Qty         Amount \\n\";\n        str+=\"Unit Price\\n\";\n        str+=\"________________________________\\n\";\n        \n        this.currOrder.order_items.forEach(item=>{\n            str+=item.item_name+\"\\n\";\n            str+=\"Rs.\"+item.price_sold+\" X \"+item.qty+\" => Rs.\"+(item.qty*item.price_sold).toFixed(2)+\"\\n\";\n        })\n        str+=\"\\n======= Invoice Payment ========\\n\";\n        str+=\"Bill Amount     Rs.\"+(this.currOrder.odr_amount-this.currOrder.vat_amount).toFixed(2)+\"\\n\";\n        str+=\"VAT(8%)         Rs.\"+this.currOrder.vat_amount.toFixed(2)+\"\\n\";\n        str+=\"Tot.Bill Amount Rs.\"+this.currOrder.odr_amount.toFixed(2)+\"\\n\";\n        str+=\"--------------------------------\\n\";\n        str+=\"Paid Amount     Rs.\"+Number(this.currOrder.odr_paid_amount).toFixed(2)+\"\\n\";\n        str+=\"Current Outst.  Rs.\"+this.tempOutstanding.toFixed(2)+\"\\n\";\n        \n        if (this.outstSettles.length > 0) {\n            str+=\"\\n\\n===== Out/Exc Settlements ======\\n\";\n            this.outstSettles.forEach(pay=>{\n                str+=\"Invoice #\"+pay.odrId+\" => Rs.\"+pay.amount+(pay.isOutstPay?\"(+)\":\"(-)\")+\"\\n\";       \n            })\n            str+=\"--------------------------------\\n\";\n            str+=\"Tot.Out/Exc Ded Rs.\"+this.outstDeduct.toFixed(2)+\"\\n\";\n        }\n        str+=\"================================\\n\\n\\n\";\n        str+=\"________________________________\\n\";\n        if (isCustCpy) {\n            str+=\"Customer Signature\\n\"; \n        }else{\n            str+=\"Sales Rep Signature\\n\"; \n        }\n        str+=strSep+\"\\n\\n\";\n\n        window.sunmiInnerPrinter.printOriginalText(strSep);\n        window.sunmiInnerPrinter.printTextWithFont('\\n      Jaya Farm\\n','Calibri',36);\n        window.sunmiInnerPrinter.printTextWithFont('\\n   Nattandiya, Marawila\\n','Calibri',30);\n        window.sunmiInnerPrinter.printTextWithFont('\\n         032-2254811\\n','Calibri',24);\n        // window.sunmiInnerPrinter.printTextWithFont('\\n\\nSales Invoice: #'+this.invoiceNo+\"\\n\",'Calibri',30);\n        window.sunmiInnerPrinter.printOriginalText(str);\n        if (!isCustCpy) {\n            this.modalController.dismiss({\n                'dismissed': true\n            });\n        }\n    }\n\n\n    async submitOrder(){\n        if (!navigator.onLine) {\n            this.authService.showToast(\"<b>No internet access..<ion-icon name='information-circle-outline'></ion-icon></b><br>Cannot connect to the server..\");\n            return;\n        } \n        this.processOrder();\n        console.log(this.currOrder.odr_paid_amount);\n        if ((!this.currOrder.odr_paid_amount || this.currOrder.odr_paid_amount == null) && Number(this.currOrder.odr_paid_amount) !== 0) {\n            this.authService.showToast(\"<b>Please enter the 'Total Payed Amount'... <ion-icon name='warning'></ion-icon></b>\");\n            return;\n        } \n        const ParseHeaders = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/x-www-form-urlencoded'\n            })\n        };\n        \n        let url = this.storage.svr_url+\"OrderCtrl/processOrder\";\n        let postData: any = [];\n    \n        postData.push({ \n            'order': this.currOrder,\n            'currOdrPay': this.effectivePaid,\n            'outstPays': this.outstSettles\n        });\n        this.submitting = true;\n      \n        //   console.log(postData);\n      \n        const alert = await this.alertController.create({\n            mode: \"ios\",\n            header: 'Confirm submit invoice',\n            message: 'Do you really want to submit the invoice?',\n            buttons: [\n                {   text: 'Cancel',\n                    role: 'cancel',\n                    cssClass: 'secondary',\n                    handler: () => { this.submitting = false; }\n                },\n                {   text: 'Submit',\n                    handler: () => {\n                        console.log(postData)\n                        this.http.post(url, postData, ParseHeaders).subscribe((res) => {\n                            this.submitting = false;\n                            console.log(res)\n                            if (res !== false ) {\n                                console.log(res);\n                                this.invoiceNo = res;\n                                console.log(this.invoiceNo);\n                                this.printInvoice(true);\n                                this.currOrder.isWorking = false;\n                            } else {\n                                this.authService.showToast('Problem submitting invoice..');\n                                return false;\n                            }\n                        }, (error: any) => {\n                            console.log(error);\n                            return false;\n                        });\n                    }\n                }\n            ]\n        });\n        this.submitting = false;\n        await alert.present();\n    }\n    \n    /**\n     * Check while typing that enough quantity is available in trip item\n     * @param ev - $event variable of current event\n     * @param itemId - The trip item that the balance quantity should be checked\n     */\n    chkItemBalence(ev, itemId: number) {\n        if (itemId === undefined) {\n            this.authService.showToast(\"<b>Please select the item first..<ion-icon name='warning'></ion-icon></b>\");\n            // ev.srcElement.disabled = true;\n            ev.target.value = null;\n        } else{\n            // ev.srcElement.disabled = false;\n            let tripItemIdx = this.curTrip.tripItems.findIndex(item=> item.itemId == itemId);\n            if (this.curTrip.tripItems[tripItemIdx].balanceQty < ev.target.value) {\n                this.authService.showToast(\"<b>You don't have enough item quantity..<ion-icon name='warning'></ion-icon></b>\");\n                ev.target.value = null;\n            }\n        }\n       \n    }\n\n    finalizeItem(evt){\n        this.calcOrderAmount();\n        this.setOrderUtilInfo();\n        console.log(evt)\n    }\n\n    processOrder(){\n        console.log(this.currOrder.order_items)\n        if (this.currOrder.order_items.length < 1) {\n            this.calcOrderAmount();\n            this.setOrderUtilInfo();\n            // this.isOrdeValid = false;\n            // this.authService.showToast(\"<b>You are going to  <ion-icon name='warning'></ion-icon></b></br>Please add atleast one item to the invoice..\");\n        } else{\n            this.currOrder.order_items.forEach(item=>{\n                if (!item.item_id || !item.qty || item.qty == null ) {\n                    // this.isOrdeValid = false;\n                    this.authService.showToast(\"<b>Problem processing invoice. <ion-icon name='warning'></ion-icon></b></br>Please re-check invoice items carefully...\");\n                }\n                else{   \n                    this.calcOrderAmount();\n                    this.setOrderUtilInfo();\n                    // this.setInvoicePaidAuto();\n                }\n            })\n        }\n    }\n\n    calcOrderAmount(){\n        if ((!this.currOrder.odr_paid_amount || this.currOrder.odr_paid_amount == null) && Number(this.currOrder.odr_paid_amount) !== 0) {\n            this.authService.showToast(\"<b>Please enter the 'Total Payed Amount'... <ion-icon name='warning'></ion-icon></b>\");\n            return;\n        }\n        this.currOrder.odr_amount = 0;\n        // this.tempOutstanding = this.customer.outstanding;\n        \n        console.log(this.currOrder)\n\n        this.currOrder.order_items.forEach(item=>{\n            this.currOrder.odr_amount += item.price_sold*item.qty;\n        })\n\n        this.currOrder.vat_amount = this.customer.is_vat == \"VAT\" ? 8/100 * this.currOrder.odr_amount:0;\n        this.currOrder.odr_amount = this.currOrder.odr_amount + this.currOrder.vat_amount;\n        this.updateTotOutst();\n    }\n\n    updateTotOutst(){\n        this.calcEffectivePaid();\n\n        // this.tempOutstanding = this.customer.outstanding*1 - this.outstDeduct*1;\n        this.tempOutstanding = 0;\n        this.tempOutstanding = (((this.tempOutstanding*-1) + (this.effectivePaid*1 - this.currOrder.odr_amount))*-1);\n    }\n\n    setOrderUtilInfo(){\n        this.currOrder.cust_id = this.customer.cust_id;\n        this.currOrder.odr_datetime = this.datepipe.transform(new Date(), 'yyyy-MM-dd HH:mm:ss');\n        this.currOrder.trip_id = this.curTrip.tripId;\n        this.currOrder.cust_cat_id = Number(this.customer.cat_id);\n        // this.currOrder.odr_paid_amount \n        console.log(this.currOrder)\n    }\n\n\n    isOrderValid(){\n        // this.isOrdeValid = true;\n\n        // if (this.currOrder.order_items.length > 0) {\n        //     this.isOrdeValid = false;\n        //     return;\n        // }\n        // this.currOrder.order_items.forEach(item=>{\n        //     if (!item.item_id || !item.qty || item.qty == null) {\n        //         this.isOrdeValid = false;\n        //         return;\n        //     }\n        // })\n        // console.log(this.currOrder.order_items)\n        // this.isOrdeValid = isValid;\n    }\n\n    /**\n     * Update the selected status of a specific item in current trip\n     * @param itemId - item to be updated on current trip\n     */\n    toggleUpdateItemList(itemId: number){\n        console.log(\"itemId \"+itemId)\n        console.log(this.curTrip.tripItems)\n        let itemIndex = this.curTrip.tripItems.findIndex(itemInArra=> itemInArra.itemId == itemId);\n        if (itemIndex > -1) {\n            console.log(\"itemIndex \"+itemIndex)\n            let isSelectd = this.curTrip.tripItems[itemIndex].isSelected;\n            this.curTrip.tripItems[itemIndex].isSelected = isSelectd? false: true;\n        }  \n        this.isOrderValid(); \n    }\n\n    /**\n     * Update the order item sold price of the particular customer\n     * @param itemId - The item to be updated the price on order items\n     */\n    calcPrice(itemId: number){\n        let index = this.currOrder.order_items.findIndex(odrItem=>odrItem.item_id == itemId);\n        console.log(\"index: \"+index)\n        if (index > -1) {\n            let selectedItem = this.currOrder.order_items[index];\n            let tripItemIdx = this.curTrip.tripItems.findIndex(item=>item.itemId == selectedItem.item_id);\n            this.currOrder.order_items[index].price_sold = this.curTrip.tripItems[tripItemIdx].item_unit_price;     \n            this.currOrder.order_items[index].item_name = this.curTrip.tripItems[tripItemIdx].itemName;       \n        }\n        this.isOrderValid();\n    }\n\n    /**\n     * Remove item from order items list\n     * @param item - Item object that in current order to be removed \n     */\n    removeItem(item){\n        let index = this.currOrder.order_items.indexOf(item);\n    \n        if(index > -1){\n            let rmvItemId = this.currOrder.order_items[index].item_id;\n            this.toggleUpdateItemList(rmvItemId);\n            this.currOrder.order_items.splice(index, 1);\n        }\n        this.isOrderValid();\n        console.log( this.currOrder.order_items)\n    }\n\n    /**\n     * Add empty item to current order items list \n     */\n    addItem(){\n        console.log(this.curTrip.tripItems)\n        this.currOrder.isWorking = true;\n        this.currOrder.order_items.push(<OrderItem>{});\n        this.currOrder.odr_paid_amount = '';\n        console.log(this.currOrder.order_items)\n        // this.isOrderValid();\n    }\n\n\n    /**\n     * Close the current modal page\n     */\n    async dismiss() {\n        if (this.currOrder.order_items.length > 0 && this.currOrder.isWorking) {\n            const alert = await this.alertController.create({\n                mode: \"ios\",\n                header: 'Exit order process',\n                message: 'Do you really want to exit and discard the order?',\n                buttons: [\n                    {   text: 'Cancel',\n                        role: 'cancel',\n                        cssClass: 'secondary',\n                    },\n                    {   text: 'Discard & Exit',\n                        handler: () => {\n                            this.modalController.dismiss({\n                                'dismissed': true\n                            });\n                        }\n                    }\n                ]\n                });\n                await alert.present();\n        }\n    }\n\n    /**\n     * Retreive current customer outstanding payment value\n     */\n    getCustOutstanding(){\n        if (!navigator.onLine){\n            this.authService.showToast(\"<b>No internet access..<ion-icon name='information-circle-outline'></ion-icon></b><br>Cannot connect to the server..\");\n        } \n\n        let url = this.storage.svr_url+\"OrderCtrl/getCustOutstanding/\"+this.customer.cust_id;\n\n        this.http.get(url).subscribe((outsts: any)=>{\n            console.log(outsts);\n\n            if (outsts) {\n                this.outsts = outsts;\n                let ttlOutst: number = 0;\n\n                outsts.forEach(outst=>{\n                    // console.log(outst.out)\n                    ttlOutst += Number(outst.out);\n                    // console.log(ttlOutst)\n                })\n                console.log(ttlOutst)\n                this.customer.outstanding = ttlOutst;\n                // this.tempOutstanding = this.customer.outstanding;\n                this.tempOutstanding = this.customer.outstanding*1 - this.outstDeduct*1;\n            }\n        });\n    }\n\n\n    /**\n     * Load current trip info from server side\n     */\n    fetchServerCurrTrip(){\n            \n        if (!navigator.onLine){\n            this.authService.showToast(\"<b>No internet access..<ion-icon name='information-circle-outline'></ion-icon></b><br>Cannot connect to the server..\");\n        } \n\n        let url = this.storage.svr_url+\"RepCtrl/getRepTripList/\"+this.rep.repID+\"/-1/1\";\n\n        // let trip: Trip = <Trip>{};\n        this.http.get(url).subscribe((data: any[])=>{\n            if (data.length != 1) {\n                this.authService.showToast(\"You have no or more than one started trips..<ion-icon name='warning'></ion-icon></b><br>Please contact the administration..\"); \n            }else{\n                let elm = data[0];\n                this.curTrip = <Trip>{\n                    tripId: Number(elm.trip_id),\n                    tripStTime: elm.trip_st_time,\n                    tripEndTime: elm.trip_end_time,\n                    tripItems: this.getTripItems(Number(elm.trip_id)),\n                    isOpened: (elm.trip_end_time == null) ? true: false\n                }\n                \n            }\n        });\n    }\n\n    /**\n     * Fetch trip item info from serverside\n     * @param tripId - The trip_id to get the items of that particular trip\n     */\n    getTripItems(tripId: number): TripItem[]{\n        console.log(\"trip Id to get items \"+tripId)\n        let items: TripItem[] = [];\n\n        if (!navigator.onLine) {\n            this.authService.showToast(\"<b>No internet access..<ion-icon name='information-circle-outline'></ion-icon></b><br>Cannot connect to the server..\");\n        } else {\n            this.submitting = true;\n            let url = this.storage.svr_url+\"RepCtrl/getItemPriceByCustomer/\"+tripId+\"/\"+this.customer.cust_id+\"/\"+this.customer.cat_id;\n\n            this.http.get(url).subscribe((data: any) => {\n                if (data.length > 0){\n                    data.forEach((elm) => {\n                        items.push(<TripItem>{\n                            itemId: Number(elm.item_id),\n                            itemName: elm.item_name,\n                            itemUnitName: elm.item_unit_name,\n                            item_unit_price: elm.item_unit_price,\n                            loadQty: elm.load_qty,\n                            balanceQty: (elm.unload_qty == null || elm.unload_qty == '') ? Number(elm.load_qty): Number(elm.unload_qty),\n                            isSelected: false\n                        })\n                    });\n                } \n                this.submitting = false;\n            },\n            (error: any) => {\n                console.log(error);\n            });\n        } \n        return items; \n    }\n\n}\n"],"sourceRoot":"webpack:///","file":"default~dashboard-dashboard-module~inc-add-order-add-order-module-es5.js"}