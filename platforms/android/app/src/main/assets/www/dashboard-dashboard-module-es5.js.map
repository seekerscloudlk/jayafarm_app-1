{"version":3,"sources":["src/app/members/dashboard/dashboard.page.html","src/app/members/dashboard/dashboard-routing.module.ts","src/app/members/dashboard/dashboard.module.ts","src/app/members/dashboard/dashboard.page.scss","src/app/members/dashboard/dashboard.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header color=\\\"primary\\\">\\n  <ion-toolbar class=\\\"toolbar-background-md\\\">\\n    <ion-title>\\n      <ion-chip outline class=\\\"ion-margin-vertical chip\\\">\\n        <ion-icon class=\\\"chip ion-no-margin\\\" name=\\\"map\\\"></ion-icon>\\n        <ion-select style=\\\"margin-top: 10px;\\\" [interfaceOptions]=\\\"customPopoverOptions\\\" interface=\\\"popover\\\" mode=\\\"ios\\\" placeholder=\\\"Route\\\" [(ngModel)]=\\\"currRootId\\\" (ionChange)=\\\"setRouteCusts()\\\">\\n            <ion-select-option *ngFor=\\\"let route of routes\\\" value=\\\"{{route.route_id}}\\\">\\n                {{route.route_name}}\\n            </ion-select-option>\\n        </ion-select>\\n        <ion-spinner style=\\\"margin-left: 16px;\\\" name=\\\"crescent\\\" size=\\\"small\\\" color=\\\"light\\\" [hidden]=\\\"!submitting\\\"></ion-spinner>\\n      </ion-chip>\\n\\n      <ion-chip color=\\\"light\\\" class=\\\"chip-notice\\\"  (click)=\\\"checkAndUpdateRep()\\\">   \\n        <ion-icon name=\\\"bicycle\\\" [color]=\\\"istmpCurrTripIdSet() ? 'success':'danger'\\\" ></ion-icon>      \\n            <ion-icon name=\\\"warning\\\" [hidden]=\\\"istmpCurrTripIdSet()\\\"></ion-icon>\\n            <h5 style=\\\"margin-top: 12px;\\\" mode=\\\"ios\\\" [hidden]=\\\"!istmpCurrTripIdSet()\\\"> {{tmpCurrTripId}} </h5>\\n      </ion-chip>\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>      \\n  <ion-list #custList class=\\\"sheet-list\\\">\\n      <ion-card-header>\\n          <ion-grid>\\n                <ion-row>\\n                    <ion-col size=\\\"8\\\" style=\\\"padding-top: 20px\\\">\\n                        <ion-card-subtitle *ngIf=\\\"isRootCustAvail\\\">{{ currRootCusts.length }} customer(s) avilable</ion-card-subtitle>\\n                        <ion-card-subtitle *ngIf=\\\"!isRootCustAvail && isRootSelected\\\">No customers registerd for this route </ion-card-subtitle>\\n                        <ion-card-subtitle *ngIf=\\\"!isRootSelected\\\">Please select the route.. </ion-card-subtitle>\\n                    </ion-col>\\n                    <ion-col size=\\\"4\\\">\\n                        <ion-button class=\\\"ion-text-capitalize\\\" *ngIf=\\\"isRootSelected\\\" (click)=\\\"openAddCust()\\\">\\n                            <ion-icon name=\\\"add\\\"></ion-icon>Customer\\n                        </ion-button>\\n                    </ion-col>\\n                </ion-row>\\n          </ion-grid>\\n        \\n        \\n      </ion-card-header>\\n      \\n      <ion-item-sliding *ngFor=\\\"let cust of currRootCusts\\\" class=\\\"list-small-amrgin\\\">\\n          <ion-item background=\\\"dark\\\" (click)=\\\"addOrder(cust)\\\">\\t\\t\\t\\n              <ion-label text-wrap class=\\\"ion-no-margin\\\">\\n                  <ion-text color=\\\"dark\\\" slot=\\\"start\\\">\\n                    <ion-badge mode=\\\"ios\\\" class=\\\"list-header\\\" color=\\\"primary\\\">\\n                      <ion-icon name=\\\"business\\\" size=\\\"small\\\"></ion-icon> {{ cust.cust_name }} | {{ cust.is_vat }}\\n                    </ion-badge>\\n                  </ion-text>\\n                  \\n                  <ion-text color=\\\"light\\\">\\n                      <p class=\\\"list-sub-header\\\">\\n                          <ion-icon name=\\\"pin\\\"></ion-icon>\\n                          {{ cust.address_line1 }} {{ cust.address_line2 }} {{cust.address_line3}}\\n                      </p>\\n                  </ion-text>\\n              </ion-label>\\n          </ion-item>\\n          \\n          <ion-item-options side=\\\"end\\\">\\n              <ion-item-option color=\\\"primary\\\" class=\\\"ion-text-capitalize\\\" (click)=\\\"openCustInfo(cust)\\\"  [class.disable-btn]=\\\"submitting\\\" >\\n                  <ion-icon name=\\\"more\\\"></ion-icon>More\\n              </ion-item-option>\\n              <ion-item-option color=\\\"dark\\\" class=\\\"ion-text-capitalize\\\" (click)=\\\"addOrder(cust)\\\"  [class.disable-btn]=\\\"submitting || !istmpCurrTripIdSet()\\\">\\n                      <ion-icon name=\\\"add-circle-outline\\\"></ion-icon>Order\\n              </ion-item-option>\\n              <ion-item-option color=\\\"secondary\\\" class=\\\"ion-text-capitalize\\\" (click)=\\\"openHistory(cust.cust_id)\\\" >\\n                <ion-icon name=\\\"checkmark-circle-outline\\\"></ion-icon>History\\n        </ion-item-option>\\n          </ion-item-options>\\n      </ion-item-sliding>\\n    </ion-list>\\n</ion-content>\\n\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardPage } from './dashboard.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DashboardPageRoutingModule } from './dashboard-routing.module';\n\nimport { DashboardPage } from './dashboard.page';\nimport { CustInfoPageModule } from '../inc/cust-info/cust-info.module';\nimport { AddOrderPageModule } from '../inc/add-order/add-order.module';\nimport { CustAddPageModule } from '../inc/cust-add/cust-add.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DashboardPageRoutingModule,\n    CustInfoPageModule,\n    AddOrderPageModule,\n    CustAddPageModule\n  ],\n  declarations: [DashboardPage]\n})\nexport class DashboardPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbWJlcnMvZGFzaGJvYXJkL2Rhc2hib2FyZC5wYWdlLnNjc3MifQ== */\"","import { AuthenticationService } from './../../services/authentication.service';\nimport { StorageService, Rep } from './../../services/storage.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MenuController } from '@ionic/angular';\nimport { FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastController, IonList, Platform} from '@ionic/angular';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ModalController } from '@ionic/angular';\n\nimport { CustInfoPage } from '../inc/cust-info/cust-info.page';\nimport { AddOrderPage } from '../inc/add-order/add-order.page';\nimport { OrderHistoryPage } from '../inc/order-history/order-history.page';\nimport { CustAddPage } from '../inc/cust-add/cust-add.page';\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.page.html',\n    styleUrls: ['./dashboard.page.scss'],\n})\nexport class DashboardPage implements OnInit {\n  \n    private routes: any[];\n    private currRootId: any;\n    private currRootCusts: any[];\n    private isRootCustAvail: boolean = false;\n    private submitting: boolean;\n    private repId: number;\n    private tmpCurrTripId: number = -1;\n    private currCustomer: number;\n    private isRootSelected: boolean = false;\n    private rep: Rep;\n    customPopoverOptions: any = {\n        subHeader: 'Route',\n        message: 'Select current route'\n    };\n\n    @ViewChild('custList', {static: false}) custList: IonList;\n    constructor(\n        private authService: AuthenticationService,\n        public router: Router, \n        public formBuilder: FormBuilder, \n        public toast: ToastController,\n        private http: HttpClient,\n        private storage: StorageService,\n        public modalController: ModalController,\n        private plt: Platform\n        ) { \n        \n    }\n \n    ngOnInit() {\n        this.plt.ready().then(() => {\n            document.addEventListener(\"backbutton\",function(e) {}, false);\n            this.checkAndUpdateRep();\n        })\n    }\n\n\n    async openAddCust(){\n        const modal = await this.modalController.create({\n            component: CustAddPage,\n            componentProps: {\n                currRootId: this.currRootId,\n            }\n        });\n        modal.present(); \n        let ret = await modal.onWillDismiss();\n        let isAdd = ret.data.isAdded;\n        if (isAdd) {\n            console.log(isAdd);\n            this.setRouteCusts();\n        }\n    }\n\n\n    checkAndUpdateRep() {\n\n        this.authService.getRep().then(rep=>{\n            this.rep = rep;\n            this.routes = rep.repRoutes;\n            this.repId = rep.repID;\n            // this.checkAndSyncCurrTrip(rep);\n            this.getSVROpenedTripId();  //set current opened trip id from server\n\n            console.log(rep)\n            if (!rep.currOpenedTripId) {\n                rep.currOpenedTripId = this.tmpCurrTripId;\n            } else {\n                if (rep.currOpenedTripId != this.tmpCurrTripId && this.tmpCurrTripId != -1) {\n                    rep.currOpenedTripId = this.tmpCurrTripId;\n                    this.authService.setRep(rep); //update local rep on local storage\n                }\n            }\n            // console.log(rep)\n        })\n    }\n\n\n    async addOrder(customer: any){\n        // console.log(customer)\n        if(this.istmpCurrTripIdSet()){\n            const modal = await this.modalController.create({\n                component: AddOrderPage,\n                componentProps: {\n                    customer: customer,\n                    tripId: this.tmpCurrTripId,\n                    // repId: this.repId,\n                    rep: this.rep\n                }\n            });\n            return await modal.present();\n        } else{\n            this.showToast(\"Please set the current opened trip first..<ion-icon name='warning'>\\\n            </ion-icon></b><br><b>Hint: </b> Refresh the trip (tap the Bicycle Icon) and try again..\");\n        }\n    }\n\n    async openHistory(cust_id: number){\n        const modal = await this.modalController.create({\n            component: OrderHistoryPage,\n            componentProps: {\n                custId: cust_id,\n            }\n        });\n        return await modal.present();\n    }\n\n    isRouteSet(){\n        return (this.routes == null) \n    }\n    \n    logout() {\n        this.authService.logout();\n    }\n\n    setRouteCusts(){\n        console.log(this.currRootId);\n        this.getCurrRoutCustomerInfo();\n\n    }\n\n    async openCustInfo(cust: any) {\n        const modal = await this.modalController.create({\n            component: CustInfoPage,\n            componentProps: {\n                custData: cust\n            }\n        });\n        return await modal.present();\n    }\n\n    istmpCurrTripIdSet(): boolean{\n        return (this.tmpCurrTripId != -1 ? true: false)\n    }\n\n    getSVROpenedTripId(){\n        if (!navigator.onLine) {\n            this.showToast(\"<b>No internet access..<ion-icon name='information-circle-outline'></ion-icon></b><br>Cannot connect to the server..\");\n        } else{\n            this.submitting = true;\n            let url = this.storage.svr_url+\"RepCtrl/getCurrentTripId/\"+this.repId;\n\n            this.http.get(url).subscribe((data: any) => {\n            if (data.length === 1){\n                this.tmpCurrTripId = data[0].trip_id;\n            } else{\n                this.tmpCurrTripId = -1;\n                this.showToast(\"You have no or more than one started trips..<ion-icon name='warning'></ion-icon></b><br>Please contact the administration..\"); \n            }\n            this.submitting = false;\n            },\n            (error: any) => {\n                console.log(error);\n            });\n        }\n    }\n\n    getCurrRoutCustomerInfo(){\n        if (!navigator.onLine) {\n            this.showToast(\"<b>No internet access..<ion-icon name='information-circle-outline'></ion-icon></b><br>Cannot connect to the server..\");\n        } else {\n            this.submitting = true;\n            const ParseHeaders = {\n                headers: new HttpHeaders({\n                'Content-Type': 'application/x-www-form-urlencoded'\n                })\n            };\n            \n            let url = this.authService.svr_url+\"RepCtrl/getCustomerByRouteID/\"+this.currRootId;\n\n            this.http.post(url, null, ParseHeaders).subscribe((data: any) => {\n                this.submitting = false;\n                console.log(data);\n                this.isRootSelected = true;\n                if (data != 0){\n                    this.currRootCusts = data;\n                    this.isRootCustAvail = true;\n                } else {\n                    this.isRootCustAvail = false;\n                    this.currRootCusts = null;\n                }\n                // this.currRootCusts = data;\n                // this.loadCurrRootCusts();\n            },\n            (error: any) => {\n                console.log(error);\n            });\n\n        }   \n    }\n\n    // loadCurrRootCusts() {\n    //     if (this.currRootCusts.length > 0) {\n    //         this.isRootCustAvail = true;\n    //     }\n    // }\n\n    async showToast(msg) {\n        const toast = await this.toast.create({\n            mode: 'ios',\n            message: msg,\n            duration: 4000\n        });\n        toast.present();\n    }\n}"],"sourceRoot":"webpack:///","file":"dashboard-dashboard-module-es5.js"}